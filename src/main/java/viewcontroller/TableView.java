package viewcontroller;

import java.awt.*;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import javax.swing.*;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;

public class TableView extends JFrame {

    // Menu
    private JMenuBar menuBar;
    private JMenu mainMenu;
    private JMenu projectionMenu;
    private JMenu selectionMenu;
    private JMenu tableMenu;
    private JMenuItem[] selectionMenuItems;
    private JMenuItem[] projectionMenuItems;
    private JMenuItem[] tableMenuItems;
    private JMenuItem quitProgram;

    // Lectures Table
    private JPanel tablePanel;
    private JTable joinableLecturesTable;
    private JScrollPane joinableLecturesPanel;
    private JTextArea detailsArea;

    public TableView() {

        // Init components
        this.setTitle("University app");
        this.setSize(500, 300);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Top menu
        menuBar = new JMenuBar(); // top menu bar

        mainMenu = new JMenu("☰"); // program control
        quitProgram = new JMenuItem("Quit");
        mainMenu.add(quitProgram);

        tableMenu = new JMenu("T");
        projectionMenu = new JMenu("P"); // column projection menu
        selectionMenu = new JMenu("S"); // row selection menu

        menuBar.add(mainMenu);
        menuBar.add(tableMenu);
        menuBar.add(projectionMenu);
        menuBar.add(selectionMenu);

        // Build panel

        tablePanel.setLayout(new BorderLayout());
        tablePanel.add(joinableLecturesPanel, BorderLayout.CENTER);
        tablePanel.add(menuBar, BorderLayout.NORTH);
        tablePanel.add(detailsArea, BorderLayout.SOUTH);

        this.add(tablePanel);
    }

    // Table Data

    public JTable getJoinableLecturesTable() {
        return joinableLecturesTable;
    }

    public void setTableModel(TableModel tableModel) {
        joinableLecturesTable.setModel(tableModel);
    }

    // Main Menu

    public void setExitListener(ActionListener l) {
        quitProgram.addActionListener(l);
    }

    // Table Selection Menu

    public JMenuItem[] getTableMenuItems() {
        return tableMenuItems;
    }

    public void setTableMenu(String[] tableNames) {
        tableMenuItems = new JMenuItem[tableNames.length];
        if (tableNames.length > 0) {
            tableMenuItems[0] = new JMenuItem("√ " + tableNames[0]);
            tableMenu.add(tableMenuItems[0]);
            for (int i = 1; i < tableNames.length; i++) {
                tableMenuItems[i] = new JMenuItem(tableNames[i]);
                tableMenu.add(tableMenuItems[i]);
            }
        }
    }

    public void setTableMenuItemsListener(ActionListener l) {
        for (JMenuItem tableMenuItem : tableMenuItems) {
            tableMenuItem.addActionListener(l);
        }
    }

    // Chair Selection Menu

    public JMenuItem[] getSelectionMenuItems() {
        return selectionMenuItems;
    }

    public void setSelectionMenu(String[] chairNames) {
        selectionMenuItems = new JMenuItem[chairNames.length];
        for (int i = 0; i < chairNames.length; i++) {
            selectionMenuItems[i] = new JMenuItem("√ " + chairNames[i]);
            selectionMenu.add(selectionMenuItems[i]);
        }
    }

    public void setSelectionMenuItemsListener(ActionListener l) {
        for (JMenuItem selectionMenuItem : selectionMenuItems) {
            selectionMenuItem.addActionListener(l);
        }
    }

    // Column Selection Menu

    public JMenuItem[] getProjectionMenuItems() {
        return projectionMenuItems;
    }

    public void setColProjectionMenu(String[] colNames) {
        projectionMenuItems = new JMenuItem[colNames.length];
        for (int i = 0; i < colNames.length; i++) {
            projectionMenuItems[i] = new JMenuItem("√ " + colNames[i]);
            projectionMenu.add(projectionMenuItems[i]);
        }
    }

    public void setProjectionMenuItemsListener(ActionListener l) {
        for (JMenuItem projectionMenuItem : projectionMenuItems) {
            projectionMenuItem.addActionListener(l);
        }
    }

    // Details Area

    public JTextArea getDetailsArea() {
        return detailsArea;
    }

    public void setDetailsAreaText(String text) {
        detailsArea.setText(text);
    }

    public void setTableModelListener(ListSelectionListener l) {
        joinableLecturesTable.getSelectionModel().addListSelectionListener(l);
    }

    // Column Headers

    public void setColumnHeaderListener(MouseListener l) {
        joinableLecturesTable.getTableHeader().addMouseListener(l);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        tablePanel = new JPanel();
        tablePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        joinableLecturesPanel = new JScrollPane();
        tablePanel.add(joinableLecturesPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        joinableLecturesTable = new JTable();
        joinableLecturesTable.setAutoCreateColumnsFromModel(true);
        joinableLecturesTable.setFillsViewportHeight(false);
        joinableLecturesPanel.setViewportView(joinableLecturesTable);
        detailsArea = new JTextArea();
        detailsArea.setLineWrap(true);
        detailsArea.setText("Select lecture to show details here.");
        detailsArea.setWrapStyleWord(true);
        tablePanel.add(detailsArea, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return tablePanel;
    }
}

